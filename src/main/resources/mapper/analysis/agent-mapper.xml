<?xml version="1.0" encoding="UTF-8"?>
<!--
SEEK
Copyright (C) 2025 placelink

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program. If not, see <https://www.gnu.org/licenses/>.

=========================================================================

상업적 이용 또는 AGPL-3.0의 공개 의무를 면제받기
위해서는, placelink로부터 별도의 상업용 라이선스(Commercial License)를 구매해야 합니다.
For commercial use or to obtain an exemption from the AGPL-3.0 license
requirements, please purchase a commercial license from placelink.
*** 문의처: help@placelink.shop (README.md 참조)
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.placelink.seek.analysis.service.AgentMapper">

    <insert id="insertAgent" parameterType="agentVO">
		/** insertAgent : 에이전트 정보를 등록한다. */
		INSERT INTO SEEK_AGENT (
			CLIENT_IP,
			USER_ID,
			HOST,
			MAC_ADDR,
			ORG_CODE,
			EVENT_DT,
			MINISPY_SYS_YN,
			MSPY_USER_EXE_YN,
			WFP_BLOCKER_EXE_YN,
			CLICK_DOMAIN_AGENT_EXE_YN,
			CREATE_DT,
			CREATE_UID,
			MODIFY_DT,
			MODIFY_UID
		) VALUES (
            #{clientIp},
            #{userId},
            #{host},
            #{macAddr},
            #{orgCode},
            #{eventDateTime},
            #{minispySysYn},
            #{mspyUserExeYn},
            #{wfpBlockerExeYn},
            #{clickDomainAgentExeYn},
            NOW(),
            #{createUid},
            NOW(),
            #{createUid}
        )
		ON CONFLICT (CLIENT_IP)
		DO UPDATE SET
			USER_ID = EXCLUDED.USER_ID,
			HOST = EXCLUDED.HOST,
			MAC_ADDR = EXCLUDED.MAC_ADDR,
			ORG_CODE = EXCLUDED.ORG_CODE,
			EVENT_DT = EXCLUDED.EVENT_DT,
			MINISPY_SYS_YN = EXCLUDED.MINISPY_SYS_YN,
			MSPY_USER_EXE_YN = EXCLUDED.MSPY_USER_EXE_YN,
			WFP_BLOCKER_EXE_YN = EXCLUDED.WFP_BLOCKER_EXE_YN,
            CLICK_DOMAIN_AGENT_EXE_YN = EXCLUDED.CLICK_DOMAIN_AGENT_EXE_YN,
			MODIFY_DT = NOW(),
            MODIFY_UID = EXCLUDED.MODIFY_UID
    </insert>

    <insert id="insertAgentHeartBeatHist" parameterType="agentVO">
		/** insertAgentHeartBeatHist : 에이전트 상태확인 이력을 등록한다. */
		INSERT INTO SEEK_AGENT_HEARTBEAT_HIST (
			CLIENT_IP,
			USER_ID,
			HOST,
			MAC_ADDR,
			ORG_CODE,
			EVENT_TIME,
			COMPONENTS,
			EVENT_DT,
			MINISPY_SYS_YN,
			MSPY_USER_EXE_YN,
			WFP_BLOCKER_EXE_YN,
			CLICK_DOMAIN_AGENT_EXE_YN,
			CREATE_DT
		) VALUES (
            #{clientIp},
            #{userId},
            #{host},
            #{macAddr},
            #{orgCode},
            #{eventTime},
            #{components},
            #{eventDateTime},
            #{minispySysYn},
            #{mspyUserExeYn},
            #{wfpBlockerExeYn},
            #{clickDomainAgentExeYn},
            NOW()
        )
    </insert>

    <sql id="sqlAgentAgentStatusList">
        WITH AGENT_STATUS AS (
            SELECT
                sa.CLIENT_IP,
                sa.USER_ID,
                sa.HOST,
                sa.MAC_ADDR,
                sa.ORG_CODE,
                sa.EVENT_DT,
                sa.MINISPY_SYS_YN,
                sa.MSPY_USER_EXE_YN,
                sa.WFP_BLOCKER_EXE_YN,
                sa.CLICK_DOMAIN_AGENT_EXE_YN,
                sa.CREATE_DT,
                sa.CREATE_UID,
                sa.MODIFY_DT,
                sa.MODIFY_UID,
                /* 최근 1분 이내에 온 값만 유효하게 처리한다. */
                (sa.EVENT_DT >= NOW() - INTERVAL '1 minute') AS IS_ACTIVE_RECENTLY
            FROM SEEK_AGENT sa
            WHERE sa.MODIFY_DT >= NOW() - INTERVAL '1 month'
        ),
        AGENT_STATUS_DETAIL AS (
            SELECT
                s.CLIENT_IP,
                s.USER_ID,
                s.HOST,
                s.MAC_ADDR,
                s.ORG_CODE,
                s.EVENT_DT,
                /* '최근 1분 이내 활동 여부'에 따라 해당 활동이 있는 값들만 유효하게 처리한다. */
                CASE
                    WHEN s.IS_ACTIVE_RECENTLY THEN COALESCE(s.MINISPY_SYS_YN, 'N')
                    ELSE 'X'
                END AS MINISPY_SYS_YN,
                CASE
                    WHEN s.IS_ACTIVE_RECENTLY THEN COALESCE(s.MSPY_USER_EXE_YN, 'N')
                    ELSE 'X'
                END AS MSPY_USER_EXE_YN,
                CASE
                    WHEN s.IS_ACTIVE_RECENTLY THEN COALESCE(s.WFP_BLOCKER_EXE_YN, 'N')
                    ELSE 'X'
                END AS WFP_BLOCKER_EXE_YN,
                CASE
                    WHEN s.IS_ACTIVE_RECENTLY THEN COALESCE(s.CLICK_DOMAIN_AGENT_EXE_YN, 'N')
                    ELSE 'X'
                END AS CLICK_DOMAIN_AGENT_EXE_YN,
                s.CREATE_DT,
                s.CREATE_UID,
                s.MODIFY_DT,
                s.MODIFY_UID
            FROM AGENT_STATUS s
        )
        SELECT
            sd.*,
            CASE
                WHEN MINISPY_SYS_YN = 'Y' AND MSPY_USER_EXE_YN = 'Y' AND WFP_BLOCKER_EXE_YN = 'Y' AND CLICK_DOMAIN_AGENT_EXE_YN = 'Y' THEN 'ACTIVE'
                /* 평일 업무시간(09:00~18:00)에 모든 에이전트가 비활성화 일때 */
                WHEN sd.MINISPY_SYS_YN != 'Y' AND sd.MSPY_USER_EXE_YN != 'Y' AND sd.WFP_BLOCKER_EXE_YN != 'Y' AND sd.CLICK_DOMAIN_AGENT_EXE_YN != 'Y'
                    /* 평일 조건: 월요일(1) ~ 금요일(5) */
                    AND EXTRACT(DOW FROM NOW()) BETWEEN 1 AND 5
                    /* 업무 시간 조건: 09:00 ~ 18:00 */
                    AND NOW()::time >= '09:00:00' AND '18:00:00' >= NOW()::time
                THEN 'ALERT'
                ELSE 'CHECK'
            END AS CONDITION_LEVEL_CCD
        FROM AGENT_STATUS_DETAIL sd
    </sql>

    <select id="selectAgentStatusList" resultType="agentVO">
        /** selectAgentStatusList : 에이전트 상태 목록을 조회한다. */
        <include refid="sqlAgentAgentStatusList"/>
        ORDER BY sd.CREATE_DT DESC
    </select>

    <select id="selectAgentStatusListStatus" resultType="agentStatusVO">
        /** selectAgentStatusListStatus : 에이전트 상태 목록 현황을 조회한다. */
        SELECT
            COALESCE(SUM(CASE WHEN CONDITION_LEVEL_CCD = 'ACTIVE' THEN 1 ELSE 0 END), 0) AS ACTIVE_COUNT,
            COALESCE(SUM(CASE WHEN CONDITION_LEVEL_CCD = 'CHECK' THEN 1 ELSE 0 END), 0) AS CHECK_COUNT,
            COALESCE(SUM(CASE WHEN CONDITION_LEVEL_CCD = 'ALERT' THEN 1 ELSE 0 END), 0) AS ALERT_COUNT
        FROM (
            <include refid="sqlAgentAgentStatusList"/>
        ) x
    </select>

</mapper>
