<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.placelink.seek.analysis.service.AnalysisDetailMapper">

    <update id="updateDatabaseAnalysisContent">
		/** updateAnalysisDatabaseContent : 데이터베이스 분석 정보 내용을 수정한다. */
		UPDATE SEEK_DATABASE_ANALYSIS
		SET CONTENT = #{content}
		WHERE ANALYSIS_ID = #{analysisId}
    </update>

    <update id="updateAnalysisTargetColumnDynamically">
		/** updateAnalysisTargetColumnDynamically : 분석 대상 컬럼을 동적으로 수정한다. */
		UPDATE ${tableName}
		SET ${columnName} = #{newValue}
		WHERE ${columnName} = #{oldValue}
    </update>

    <insert id="insertProxyAnalysis" parameterType="analysisDetailVO">
		/** insertProxyAnalysis : 프록시 분석 정보를 등록한다. */
		INSERT INTO SEEK_PROXY_ANALYSIS (
			ANALYSIS_ID,
			REQUEST_ID,
			COUNTRY_CCD,
			URL,
			HEADER,
			QUERY_STRING,
			BODY,
			FILE_ID
		) VALUES (
			#{analysisId},
			#{requestId},
			#{countryCcd},
			#{url},
			#{header},
			#{queryString},
			#{body},
			#{fileId}
		)
    </insert>

    <insert id="insertFileAnalysis" parameterType="analysisDetailVO">
		/** insertFileAnalysis : 파일 분석 정보를 등록한다. */
		INSERT INTO SEEK_FILE_ANALYSIS (
			ANALYSIS_ID,
			DETECTION_FILE_ID,
			SIGNED_FILE_ID,
			SIGNED_FILE_HASH,
			FILE_COUNT,
			TOTAL_FILE_SIZE,
			REQUESTER_UID
		) VALUES (
			#{analysisId},
			#{detectionFileId},
			#{signedFileId},
			#{signedFileHash},
			#{fileCount},
			#{totalFileSize},
			#{requesterUid}
		)
    </insert>

    <insert id="updateFileAnalysis" parameterType="analysisDetailVO">
		/** updateFileAnalysis : 파일 분석 정보를 수정한다. */
		UPDATE SEEK_FILE_ANALYSIS
        SET
            DETECTION_FILE_ID = COALESCE(#{detectionFileId}, DETECTION_FILE_ID),
            SIGNED_FILE_ID = COALESCE(#{signedFileId}, SIGNED_FILE_ID),
            SIGNED_FILE_HASH = COALESCE(#{signedFileHash}, SIGNED_FILE_HASH),
            FILE_COUNT = COALESCE(#{fileCount}, FILE_COUNT),
            TOTAL_FILE_SIZE = COALESCE(#{totalFileSize}, TOTAL_FILE_SIZE),
            REQUESTER_UID = COALESCE(#{requesterUid}, REQUESTER_UID)
        WHERE ANALYSIS_ID = #{analysisId}
    </insert>

    <sql id="sqlFileAnalysis">
        SELECT
            sa.ANALYSIS_ID,
            sa.ANALYSIS_MODE_CCD,
            sa.ANALYSIS_STATUS_CCD,
            cc1.COM_CD_NM AS ANALYSIS_STATUS_CCD_NM,
            sa.ANALYSIS_RESULT_ID,
            sfa.DETECTION_FILE_ID,
            dsf.FILE_NAME AS DETECTION_FILE_NAME,
            sfa.SIGNED_FILE_ID,
            sfa.SIGNED_FILE_HASH,
            sfa.FILE_COUNT,
            sfa.TOTAL_FILE_SIZE,
            sfa.REQUESTER_UID,
            COALESCE(ssf.DOWNLOAD_COUNT, 0) AS DOWNLOAD_COUNT,
            sar.MAX_DETECTION_TYPE_CCD,
            cc2.COM_CD_NM AS MAX_DETECTION_TYPE_CCD_NM,
            COALESCE(sar.TOTAL_DETECTION_COUNT, 0) AS TOTAL_DETECTION_COUNT,
            sa.CREATE_DT,
            sa.MODIFY_DT
        FROM SEEK_ANALYSIS sa
            JOIN SEEK_FILE_ANALYSIS sfa
                ON sa.ANALYSIS_ID = sfa.ANALYSIS_ID
                AND sa.ANALYSIS_MODE_CCD = 'DETECTION_FILE'
            LEFT JOIN SEEK_ANALYSIS_RESULT sar
                ON sa.ANALYSIS_RESULT_ID = sar.ANALYSIS_RESULT_ID
            LEFT JOIN SEEK_FILE dsf
                ON sfa.DETECTION_FILE_ID = dsf.FILE_ID
            LEFT JOIN SEEK_FILE ssf
                ON sfa.SIGNED_FILE_ID = ssf.FILE_ID
            LEFT JOIN SEEK_COM_CD cc1
                ON sa.ANALYSIS_STATUS_CCD = cc1.COM_CD
                AND cc1.GROUP_CD = 'ANALYSIS_STATUS_CCD'
            LEFT JOIN SEEK_COM_CD cc2
                ON sar.MAX_DETECTION_TYPE_CCD = cc2.COM_CD
                AND cc2.GROUP_CD = 'DETECTION_TYPE_CCD'
            <where>
                <if test='searchStartDate neq null'>
                    AND sa.CREATE_DT >= #{searchStartDate}
                </if>
                <if test='searchEndDate neq null'>
                    AND #{searchEndDateNextDay} > sa.CREATE_DT
                </if>
            </where>
    </sql>

    <select id="selectFileAnalysisList" parameterType="searchVO" resultType="analysisResultVO">
        /** selectFileAnalysisList : 파일 분석 목록을 조회한다. */
        <include refid="common.sql.paging_header"/>
        <include refid="sqlFileAnalysis"/>
        <include refid="common.sql.paging_footer"/>
    </select>

    <select id="selectFileAnalysisListCount" parameterType="searchVO" resultType="integer">
        /** selectFileAnalysisListCount : 파일 분석 목록 개수를 조회한다. */
        SELECT COUNT(*)
        FROM (
            <include refid="sqlFileAnalysis"/>
        )
    </select>

    <select id="selectFileAnalysis" resultType="analysisResultVO">
        /** selectFileAnalysis : 파일 분석 정보를 조회한다. */
        <include refid="sqlFileAnalysis"/>
        WHERE sa.ANALYSIS_ID = #{analysisId}
    </select>

</mapper>
