<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.placelink.seek.analysis.service.AnalysisMapper">

	<update id="updateAnalysis" parameterType="analysisVO">
		/** updateAnalysis : 분석 정보를 수정한다. */
		UPDATE SEEK_ANALYSIS
		SET
			<if test='analysisStatusCcd eq "COMPLETE" or analysisStatusCcd eq "ERROR"'>
				ANALYSIS_END_DT = CASE
					WHEN ANALYSIS_END_DT IS NULL THEN NOW()
					ELSE ANALYSIS_END_DT
				END,
			</if>
			ANALYSIS_STATUS_CCD = #{analysisStatusCcd},
			ANALYSIS_MODEL = #{analysisModel},
			ANALYSIS_TIME = CASE WHEN #{analysisTime} IS NOT NULL THEN #{analysisTime} ELSE ANALYSIS_TIME END,
			TOTAL_DETECTED_COUNT = #{totalDetectedCount}
		WHERE ANALYSIS_ID = #{analysisId}
	</update>

	<update id="updateAnalysisTimeoutError">
		/** updateAnalysisTimeoutError : 실행 시간이 초과된 분석을 오류 처리한다. */
		UPDATE SEEK_ANALYSIS
		SET
			ANALYSIS_STATUS_CCD = 'ERROR',
			ANALYSIS_END_DT = NOW()
		WHERE ANALYSIS_STATUS_CCD = 'PROCESSING'
			AND NOW() - MAKE_INTERVAL(MINS => #{maxMinutes}) > ANALYSIS_START_DT
	</update>

	<select id="selectProcessingAnalysisList" parameterType="integer" resultType="analysisVO">
		/** selectProcessingAnalysisList : 실행중인 분석 정보 목록을 조회한다. */
		SELECT
			ANALYSIS_ID,
			ANALYSIS_TYPE_CCD,
			ANALYSIS_STATUS_CCD,
			ANALYSIS_MODEL,
			ANALYSIS_START_DT,
			ANALYSIS_END_DT,
			ANALYSIS_TIME,
			CREATE_DT
		FROM SEEK_ANALYSIS
		WHERE ANALYSIS_STATUS_CCD = 'PROCESSING'
		ORDER BY CREATE_DT
	</select>

	<select id="selectAnalysisHashCount" resultType="integer">
		/** selectAnalysisHashCount : 분석 해시값의 개수를 조회한다. */
		SELECT COUNT(1)
		FROM SEEK_ANALYSIS
		WHERE ANALYSIS_HASH = #{analysisHash}
	</select>

	<insert id="insertAnalysis" parameterType="analysisVO">
		/** insertAnalysis : 분석 정보를 등록한다. */
		INSERT INTO SEEK_ANALYSIS (
			ANALYSIS_ID,
			ANALYSIS_TYPE_CCD,
			ANALYSIS_STATUS_CCD,
			ANALYSIS_MODEL,
			CREATE_DT
		) VALUES (
			#{analysisId},
			#{analysisTypeCcd},
			#{analysisStatusCcd},
			#{analysisModel},
			NOW()
		)
	</insert>

	<update id="updateAnalysisStatus">
		/** updateAnalysisStatus : 분석 정보 상태를 수정한다. */
		UPDATE SEEK_ANALYSIS
		SET
			<if test='analysisStatusCcd eq "PROCESSING"'>
				ANALYSIS_START_DT = CASE
					WHEN ANALYSIS_START_DT IS NULL THEN NOW()
					ELSE ANALYSIS_START_DT
				END,
			</if>
			<if test='analysisStatusCcd eq "COMPLETE" or analysisStatusCcd eq "ERROR"'>
				ANALYSIS_END_DT = CASE
					WHEN ANALYSIS_END_DT IS NULL THEN NOW()
					ELSE ANALYSIS_END_DT
				END,
			</if>
			ANALYSIS_STATUS_CCD = #{analysisStatusCcd}
		WHERE ANALYSIS_ID = #{analysisId}
	</update>

	<insert id="insertAnalysisResultItems">
		/** insertAnalysisResultItems : 분석 정보 상태를 수정한다. */
		INSERT INTO SEEK_ANALYSIS_RESULT_ITEMS (
			ANALYSIS_ID,
			DETECTION_TYPE_CCD,
			DETECTED_COUNT
		) VALUES
		<foreach collection="analysisResultItemList" item="item" separator=",">
			(
				#{item.analysisId},
				#{item.detectionTypeCcd},
				#{item.detectedCount}
			)
		</foreach>
	</insert>

	<insert id="insertAnalysisError" parameterType="analysisErrorVO">
		/** insertAnalysisError : 분석 오류 정보를 등록한다. */
		<selectKey keyProperty="analysisErrorSn" resultType="integer" order="BEFORE">
			SELECT COALESCE(MAX(ANALYSIS_ERROR_SN), 0) + 1 AS ANALYSIS_ERROR_SN
			FROM SEEK_ANALYSIS_ERROR
			WHERE ANALYSIS_ID = #{analysisId}
		</selectKey>
		INSERT INTO SEEK_ANALYSIS_ERROR (
			ANALYSIS_ID,
			ANALYSIS_ERROR_SN,
			ANALYSIS_DATA,
			ERROR_MESSAGE,
			EXCLUSION_DT,
			CREATE_DT
		) VALUES (
			#{analysisId},
			#{analysisErrorSn},
			#{analysisData},
			#{errorMessage},
			NULL,
			NOW()
		)
	</insert>

	<update id="updateAnalysisErrorExclusion">
		/** updateAnalysisErrorExclusion : 분석 오류를 배제 처리한다. */
		UPDATE SEEK_ANALYSIS_ERROR
		SET EXCLUSION_DT = NOW()
		WHERE ANALYSIS_ID = #{analysisId}
			AND EXCLUSION_DT IS NULL
	</update>

	<update id="updateAnalysisTargetColumnDynamically">
		/** updateAnalysisTargetColumnDynamically : 분석 대상 컬럼을 동적으로 수정한다. */
		UPDATE ${tableName}
		SET ${columnName} = #{newValue}
		WHERE ${columnName} = #{oldValue}
	</update>

</mapper>