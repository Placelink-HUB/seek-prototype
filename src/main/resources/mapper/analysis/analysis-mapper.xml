<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.placelink.seek.analysis.service.AnalysisMapper">

    <resultMap id="analysisDetailMap" type="biz.placelink.seek.analysis.vo.AnalysisDetailVO">
        <!-- AnalysisDetailVO의 기본 필드 매핑 -->
        <result property="analysisId" column="ANALYSIS_ID"/>
        <result property="analysisTypeCcd" column="ANALYSIS_TYPE_CCD"/>
        <result property="analysisResultId" column="ANALYSIS_RESULT_ID"/>
        <result property="requestId" column="REQUEST_ID"/>
        <result property="url" column="URL"/>
        <result property="header" column="HEADER"/>
        <result property="queryString" column="QUERY_STRING"/>
        <result property="body" column="BODY"/>
        <result property="fileId" column="FILE_ID"/>
        <result property="targetInformation" column="TARGET_INFORMATION"/>
        <result property="content" column="CONTENT"/>
        <result property="createDt" column="CREATE_DT"/>

        <!-- fileDetail 필드 매핑 -->
        <association property="fileDetail" javaType="biz.placelink.seek.system.file.vo.FileDetailVO">
            <result property="fileDetailId" column="fileDetail.FILE_DETAIL_ID"/>
            <result property="fileId" column="fileDetail.FILE_ID"/>
            <result property="fileName" column="fileDetail.FILE_NAME"/>
            <result property="fileExt" column="fileDetail.FILE_EXT"/>
            <result property="fileSize" column="fileDetail.FILE_SIZE"/>
            <result property="fileHash" column="fileDetail.FILE_HASH"/>
            <result property="contentType" column="fileDetail.CONTENT_TYPE"/>
            <result property="savePath" column="fileDetail.SAVE_PATH"/>
            <result property="saveName" column="fileDetail.SAVE_NAME"/>
        </association>
    </resultMap>

    <select id="selectAnalysisHistListToExecuted" parameterType="integer" resultMap="analysisDetailMap">
		/** selectAnalysisHistListToExecuted : 실행하려는 분석 목록을 조회한다. */
		WITH PROCESSING AS (
			/* 현재 진행중인 분석 요청을 포함하여 분석 서버에 요청할 수 있는 최대(스레드) 수 만큼 조회 */
			SELECT COALESCE(#{maxCount} - COUNT(1), 0) AS SEL_COUNT
			FROM SEEK_ANALYSIS
			WHERE ANALYSIS_STATUS_CCD = 'PROCESSING'
		)
        SELECT
			sa.ANALYSIS_ID,
			sa.ANALYSIS_TYPE_CCD,
			sa.ANALYSIS_RESULT_ID,
			spa.REQUEST_ID,
			spa.URL,
			spa.HEADER,
			spa.QUERY_STRING,
			spa.BODY,
			spa.FILE_ID,
			sfd.FILE_DETAIL_ID AS "fileDetail.FILE_DETAIL_ID",
			sfd.FILE_ID AS "fileDetail.FILE_ID",
			sfd.FILE_NAME AS "fileDetail.FILE_NAME",
			sfd.FILE_EXT AS "fileDetail.FILE_EXT",
			sfd.FILE_SIZE AS "fileDetail.FILE_SIZE",
			sfd.FILE_HASH AS "fileDetail.FILE_HASH",
			sfd.CONTENT_TYPE AS "fileDetail.CONTENT_TYPE",
			sfd.SAVE_PATH AS "fileDetail.SAVE_PATH",
			sfd.SAVE_NAME AS "fileDetail.SAVE_NAME",
			sda.TARGET_INFORMATION,
			sda.CONTENT,
			sa.CREATE_DT
		FROM SEEK_ANALYSIS sa
            LEFT JOIN SEEK_PROXY_ANALYSIS spa
                ON sa.ANALYSIS_ID = spa.ANALYSIS_ID
                AND COALESCE(sa.ANALYSIS_TYPE_CCD, '') != 'DATABASE'
            LEFT JOIN SEEK_FILE_DETAIL sfd
                ON spa.FILE_ID = sfd.FILE_ID
            LEFT JOIN SEEK_DATABASE_ANALYSIS sda
                ON sa.ANALYSIS_ID = sda.ANALYSIS_ID
                AND COALESCE(sa.ANALYSIS_TYPE_CCD, '') = 'DATABASE'
		WHERE sa.ANALYSIS_STATUS_CCD = 'WAIT'
		ORDER BY sa.CREATE_DT
		LIMIT (
			SELECT
				CASE
					WHEN 0 > SEL_COUNT THEN 0
					ELSE SEL_COUNT
				END
			FROM PROCESSING
		)
    </select>

    <select id="selectProcessingAnalysisList" parameterType="integer" resultType="analysisDetailVO">
		/** selectProcessingAnalysisList : 실행중인 분석 정보 목록을 조회한다. */
		SELECT
			sa.ANALYSIS_ID,
			sa.ANALYSIS_TYPE_CCD,
			sa.ANALYSIS_STATUS_CCD,
			sa.ANALYSIS_MODEL,
			sa.ANALYSIS_RESULT_ID,
			sa.ANALYSIS_START_DT,
			sa.ANALYSIS_END_DT,
			sa.ANALYSIS_TIME,
			sda.TARGET_INFORMATION,
			sda.CONTENT,
			sa.CREATE_DT
		FROM SEEK_ANALYSIS sa
            LEFT JOIN SEEK_DATABASE_ANALYSIS sda
                ON sa.ANALYSIS_ID = sda.ANALYSIS_ID
                AND COALESCE(sa.ANALYSIS_TYPE_CCD, '') = 'DATABASE'
		WHERE sa.ANALYSIS_STATUS_CCD = 'PROCESSING'
		ORDER BY sa.CREATE_DT
    </select>

    <insert id="insertAnalysis" parameterType="analysisVO">
		/** insertAnalysis : 분석 정보를 등록한다. */
		INSERT INTO SEEK_ANALYSIS (
			ANALYSIS_ID,
			ANALYSIS_TYPE_CCD,
			ANALYSIS_STATUS_CCD,
			ANALYSIS_MODEL,
			CREATE_DT,
			MODIFY_DT
		) VALUES (
			#{analysisId},
			#{analysisTypeCcd},
			#{analysisStatusCcd},
			#{analysisModel},
			NOW(),
			NOW()
		)
    </insert>

    <update id="updateAnalysis" parameterType="analysisVO">
		/** updateAnalysis : 분석 정보를 수정한다. */
		UPDATE SEEK_ANALYSIS
		SET
			ANALYSIS_STATUS_CCD = COALESCE(#{analysisStatusCcd}, ANALYSIS_STATUS_CCD),
            ANALYSIS_MODEL = COALESCE(#{analysisModel}, ANALYSIS_MODEL),
            ANALYSIS_RESULT_ID = COALESCE(#{analysisResultId}, ANALYSIS_RESULT_ID),
        <choose>
            <when test='analysisStatusCcd eq "PROCESSING"'>
					ANALYSIS_START_DT = CASE
						WHEN ANALYSIS_START_DT IS NULL THEN NOW()
						ELSE ANALYSIS_START_DT
					END,
            </when>
            <when test='analysisStatusCcd eq "COMPLETE" or analysisStatusCcd eq "ERROR"'>
					ANALYSIS_END_DT = CASE
						WHEN ANALYSIS_END_DT IS NULL THEN NOW()
						ELSE ANALYSIS_END_DT
					END,
            </when>
        </choose>
			ANALYSIS_TIME = COALESCE(#{analysisTime}, ANALYSIS_TIME),
            MODIFY_DT = NOW()
		WHERE ANALYSIS_ID = #{analysisId}
    </update>

    <update id="updateAnalysisTimeoutError">
		/** updateAnalysisTimeoutError : 실행 시간이 초과된 분석을 오류 처리한다. */
		UPDATE SEEK_ANALYSIS
		SET
			ANALYSIS_STATUS_CCD = 'ERROR',
			ANALYSIS_END_DT = NOW()
		WHERE ANALYSIS_STATUS_CCD = 'PROCESSING'
			AND NOW() - MAKE_INTERVAL(MINS => #{maxMinutes}) > ANALYSIS_START_DT
    </update>

</mapper>
