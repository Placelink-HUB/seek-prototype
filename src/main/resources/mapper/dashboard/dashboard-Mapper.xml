<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.placelink.seek.dashboard.service.DashboardMapper">

	<select id="selectAnalysisCount" parameterType="schAnalysisStatisticsVO" resultType="analysisStatisticsVO">
        /** selectAnalysisCount : 전체 데이터 분석 수를 조회한다. */
        SELECT
            COUNT(1) AS TOTAL_ANALYSIS_COUNT,
            COALESCE(SUM(CASE WHEN ANALYSIS_STATUS_CCD = 'COMPLETE' THEN 1 ELSE 0 END), 0) AS ANALYSIS_COUNT
        FROM SEEK_ANALYSIS
        <where>
            <choose>
                <when test='schBeginDe neq null and schBeginDe neq ""'>
                    AND TO_CHAR(ANALYSIS_START_DT, 'YYYYMMDD') = TO_CHAR(#{schBeginDe}::DATE, 'YYYYMMDD')
                </when>
                <otherwise>
                    AND TO_CHAR(ANALYSIS_START_DT, 'YYYYMMDD') = TO_CHAR(NOW(), 'YYYYMMDD')
                </otherwise>
            </choose>
        </where>
    </select>

	<select id="selectAnalysisResultCount" parameterType="schAnalysisStatisticsVO" resultType="analysisStatisticsVO">
        /** selectAnalysisResultCount: 민감정보 탐지 횟수를 조회한다. */
        SELECT
            COUNT(1) AS TOTAL_DETECTION_COUNT,
            COALESCE(SUM(CASE WHEN sar.TOTAL_DETECTION_COUNT > 0 THEN 1 ELSE 0 END), 0) AS DETECTION_COUNT
        FROM SEEK_ANALYSIS sa
            LEFT JOIN SEEK_ANALYSIS_RESULT sar
                ON sa.ANALYSIS_RESULT_ID = sar.ANALYSIS_RESULT_ID
        WHERE sa.analysis_status_ccd = 'COMPLETE'
        <choose>
            <when test='schBeginDe neq null and schBeginDe neq ""'>
                AND TO_CHAR(sa.ANALYSIS_END_DT, 'YYYYMMDD') = TO_CHAR(#{schBeginDe}::DATE, 'YYYYMMDD')
            </when>
            <otherwise>
                AND TO_CHAR(sa.ANALYSIS_END_DT, 'YYYYMMDD') = TO_CHAR(NOW(), 'YYYYMMDD')
            </otherwise>
        </choose>
    </select>

    <select id="selectDetectionStatistics" parameterType="schAnalysisStatisticsVO" resultType="analysisStatisticsVO">
        /** selectDetectionStatistics : 탐지 현황을 조회한다. */
        SELECT
            SUM(COALESCE(KOREA_CNT, 0)) + SUM(COALESCE(OTHER_CNT, 0)) AS TOTAL_COUNTRY_COUNT,
            SUM(COALESCE(KOREA_CNT, 0)) AS KOREA_COUNT,
            SUM(COALESCE(OTHER_CNT, 0)) AS OTHER_COUNTRY_COUNT,
            SUM(COALESCE(KOREA_HIGH, 0)) + SUM(COALESCE(KOREA_MID, 0)) + SUM(COALESCE(KOREA_LOW, 0)) AS TOTAL_KOREA_COUNT,
            SUM(COALESCE(OTHER_HIGH, 0)) + SUM(COALESCE(OTHER_MID, 0)) + SUM(COALESCE(OTHER_LOW, 0)) AS TOTAL_OTHER_COUNTRY_COUNT,
            SUM(COALESCE(KOREA_HIGH, 0)) AS KOREA_HIGH_COUNT,
            SUM(COALESCE(KOREA_MID, 0)) AS KOREA_MID_COUNT,
            SUM(COALESCE(KOREA_LOW, 0)) AS KOREA_LOW_COUNT,
            SUM(COALESCE(OTHER_HIGH, 0)) AS OTHER_HIGH_COUNT,
            SUM(COALESCE(OTHER_MID, 0)) AS OTHER_MID_COUNT,
            SUM(COALESCE(OTHER_LOW, 0)) AS OTHER_LOW_COUNT
        FROM (
            SELECT
                COUNT(1) AS KOREA_CNT,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'high' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS KOREA_HIGH,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'mid' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS KOREA_MID,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'low' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS KOREA_LOW,
                NULL AS OTHER_CNT,
                0 AS OTHER_HIGH, 0 AS OTHER_MID, 0 AS OTHER_LOW
            FROM SEEK_ANALYSIS sa
                LEFT JOIN SEEK_PROXY_ANALYSIS spa
                    ON sa.analysis_id = spa.analysis_id
                LEFT JOIN SEEK_ANALYSIS_RESULT sar
                    ON sa.ANALYSIS_RESULT_ID = sar.ANALYSIS_RESULT_ID
                LEFT JOIN SEEK_ANALYSIS_DETECTIONS sad
                    ON sar.ANALYSIS_RESULT_ID = sad.ANALYSIS_RESULT_ID
            WHERE sa.analysis_status_ccd = 'COMPLETE'
                AND COALESCE(spa.country_ccd, 'KR') = 'KR'
                <choose>
                    <when test='schBeginDe neq null and schBeginDe neq ""'>
                        AND TO_CHAR(sa.ANALYSIS_END_DT, 'YYYYMMDD') = TO_CHAR(#{schBeginDe}::DATE, 'YYYYMMDD')
                    </when>
                    <otherwise>
                        AND TO_CHAR(sa.ANALYSIS_END_DT, 'YYYYMMDD') = TO_CHAR(NOW(), 'YYYYMMDD')
                    </otherwise>
                </choose>

            UNION ALL

            SELECT
                NULL AS KOREA_CNT,
                0 AS KOREA_HIGH, 0 AS KOREA_MID, 0 AS KOREA_LOW,
                COUNT(1) AS OTHER_CNT,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'high' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS OTHER_HIGH,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'mid' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS OTHER_MID,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'low' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS OTHER_LOW
            FROM SEEK_ANALYSIS sa
                LEFT JOIN SEEK_PROXY_ANALYSIS spa
                    ON sa.analysis_id = spa.analysis_id
                LEFT JOIN SEEK_ANALYSIS_RESULT sar
                    ON sa.ANALYSIS_RESULT_ID = sar.ANALYSIS_RESULT_ID
                LEFT JOIN SEEK_ANALYSIS_DETECTIONS sad
                    ON sar.ANALYSIS_RESULT_ID = sad.ANALYSIS_RESULT_ID
            WHERE sa.analysis_status_ccd = 'COMPLETE'
                AND  COALESCE(spa.country_ccd, 'KR') != 'KR'
                <choose>
                    <when test='schBeginDe neq null and schBeginDe neq ""'>
                        AND TO_CHAR(sa.ANALYSIS_END_DT, 'YYYYMMDD') = TO_CHAR(#{schBeginDe}::DATE, 'YYYYMMDD')
                    </when>
                    <otherwise>
                        AND TO_CHAR(sa.ANALYSIS_END_DT, 'YYYYMMDD') = TO_CHAR(NOW(), 'YYYYMMDD')
                    </otherwise>
                </choose>
        ) x
    </select>

    <select id="selectRealtimeAnalysisCount" parameterType="schAnalysisStatisticsVO" resultType="analysisStatisticsVO">
        /** selectRealtimeAnalysisCount : 실시간 분석 현황을 조회한다. */
        SELECT
            DATE_TRUNC('minute', ANALYSIS_START_DT) AS MINUTE_GROUP,
            COUNT(1) AS TOTAL_ANALYSIS_COUNT,
            COALESCE(SUM(CASE WHEN ANALYSIS_STATUS_CCD = 'COMPLETE' THEN 1 ELSE 0 END), 0) AS ANALYSIS_COUNT
        FROM SEEK_ANALYSIS
        <where>
            <choose>
                <when test='schBeginDe neq null and schBeginDe neq ""'>
                    AND TO_CHAR(ANALYSIS_END_DT, 'YYYYMMDD') = TO_CHAR(#{schBeginDe}::DATE, 'YYYYMMDD')
                </when>
                <otherwise>
                    AND TO_CHAR(ANALYSIS_END_DT, 'YYYYMMDD') = TO_CHAR(NOW(), 'YYYYMMDD')
                </otherwise>
            </choose>
        </where>
        GROUP BY MINUTE_GROUP
        ORDER BY MINUTE_GROUP
    </select>

    <select id="selectTopSensitiveInformation" parameterType="schAnalysisStatisticsVO" resultType="analysisStatisticsVO">
        /** selectTopSensitiveInformation : 민감정보 상위 5개 항목을 조회한다. */
        SELECT x.*
        FROM (
                SELECT
                    ssit.DETECTION_TYPE_CCD,
                    SUM(COALESCE(ssi.HIT_COUNT, 0)) AS HIT_COUNT
                FROM SEEK_SENSITIVE_INFORMATION ssi
                    LEFT JOIN SEEK_SENSITIVE_INFORMATION_TYPES ssit
                        ON ssi.SENSITIVE_INFORMATION_ID = ssit.SENSITIVE_INFORMATION_ID
                GROUP BY ssit.DETECTION_TYPE_CCD
        ) x
        ORDER BY x.HIT_COUNT DESC
        LIMIT 5
    </select>

</mapper>
