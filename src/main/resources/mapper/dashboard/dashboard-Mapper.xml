<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.placelink.seek.dashboard.service.DashboardMapper">

    <select id="selectAnalysisCount" resultType="analysisStatisticsVO">
        /** selectAnalysisCount : 전체 데이터 분석 수를 조회한다. */
        SELECT
            COUNT(1) AS REQUEST_COUNT,
            COALESCE(SUM(CASE WHEN ANALYSIS_STATUS_CCD = 'COMPLETE' THEN 1 ELSE 0 END), 0) AS COMPLETE_COUNT
        FROM SEEK_ANALYSIS
        WHERE ANALYSIS_MODE_CCD LIKE 'PROXY_%'
            <if test='schDe != null and schDe != ""'>
                AND (CREATE_DT >= #{schDe}::DATE AND (#{schDe}::DATE + INTERVAL '1 DAY') > CREATE_DT)
            </if>
    </select>

    <select id="selectAnalysisResultCount" resultType="analysisStatisticsVO">
        /** selectAnalysisResultCount: 민감정보 탐지 횟수를 조회한다. */
        SELECT
            COUNT(1) AS TOTAL_DETECTION_COUNT,
            COALESCE(SUM(CASE WHEN sar.TOTAL_DETECTION_COUNT > 0 THEN 1 ELSE 0 END), 0) AS DETECTION_COUNT
        FROM SEEK_ANALYSIS sa
            LEFT JOIN SEEK_ANALYSIS_RESULT sar
                ON sa.ANALYSIS_RESULT_ID = sar.ANALYSIS_RESULT_ID
        WHERE sa.ANALYSIS_MODE_CCD LIKE 'PROXY_%'
            AND sa.analysis_status_ccd = 'COMPLETE'
            <if test='schDe != null and schDe != ""'>
                AND (sa.CREATE_DT >= #{schDe}::DATE AND (#{schDe}::DATE + INTERVAL '1 DAY') > sa.CREATE_DT)
            </if>
    </select>

    <select id="selectDetectionStatistics" resultType="analysisStatisticsVO">
        /** selectDetectionStatistics : 탐지 현황을 조회한다. */
        SELECT
            SUM(COALESCE(KOREA_CNT, 0)) + SUM(COALESCE(OTHER_CNT, 0)) AS TOTAL_COUNTRY_COUNT,
            SUM(COALESCE(KOREA_CNT, 0)) AS KOREA_COUNT,
            SUM(COALESCE(OTHER_CNT, 0)) AS OTHER_COUNTRY_COUNT,
            SUM(COALESCE(KOREA_HIGH, 0)) + SUM(COALESCE(KOREA_MID, 0)) + SUM(COALESCE(KOREA_LOW, 0)) AS TOTAL_KOREA_COUNT,
            SUM(COALESCE(OTHER_HIGH, 0)) + SUM(COALESCE(OTHER_MID, 0)) + SUM(COALESCE(OTHER_LOW, 0)) AS TOTAL_OTHER_COUNTRY_COUNT,
            SUM(COALESCE(KOREA_HIGH, 0)) AS KOREA_HIGH_COUNT,
            SUM(COALESCE(KOREA_MID, 0)) AS KOREA_MID_COUNT,
            SUM(COALESCE(KOREA_LOW, 0)) AS KOREA_LOW_COUNT,
            SUM(COALESCE(OTHER_HIGH, 0)) AS OTHER_HIGH_COUNT,
            SUM(COALESCE(OTHER_MID, 0)) AS OTHER_MID_COUNT,
            SUM(COALESCE(OTHER_LOW, 0)) AS OTHER_LOW_COUNT
        FROM (
            SELECT
                COUNT(1) AS KOREA_CNT,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'high' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS KOREA_HIGH,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'mid' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS KOREA_MID,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'low' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS KOREA_LOW,
                NULL AS OTHER_CNT,
                0 AS OTHER_HIGH, 0 AS OTHER_MID, 0 AS OTHER_LOW
            FROM SEEK_ANALYSIS sa
                LEFT JOIN SEEK_PROXY_ANALYSIS spa
                    ON sa.analysis_id = spa.analysis_id
                LEFT JOIN SEEK_ANALYSIS_RESULT sar
                    ON sa.ANALYSIS_RESULT_ID = sar.ANALYSIS_RESULT_ID
                LEFT JOIN SEEK_ANALYSIS_DETECTIONS sad
                    ON sar.ANALYSIS_RESULT_ID = sad.ANALYSIS_RESULT_ID
            WHERE sa.ANALYSIS_MODE_CCD LIKE 'PROXY_%'
                AND sa.analysis_status_ccd = 'COMPLETE'
                /*
                 * 국내를 내부로 임시 변경(!!s2!!)
                AND COALESCE(spa.country_ccd, 'KR') = 'KR'
                */
                AND ANALYSIS_MODE_CCD LIKE 'PROXY_REVERSE_%'
                <if test='schDe != null and schDe != ""'>
                    AND (sa.CREATE_DT >= #{schDe}::DATE AND (#{schDe}::DATE + INTERVAL '1 DAY') > sa.CREATE_DT)
                </if>

            UNION ALL

            SELECT
                NULL AS KOREA_CNT,
                0 AS KOREA_HIGH, 0 AS KOREA_MID, 0 AS KOREA_LOW,
                COUNT(1) AS OTHER_CNT,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'high' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS OTHER_HIGH,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'mid' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS OTHER_MID,
                COALESCE(SUM(CASE WHEN sad.DETECTION_TYPE_CCD = 'low' THEN sad.DETECTION_COUNT ELSE 0 END), 0) AS OTHER_LOW
            FROM SEEK_ANALYSIS sa
                LEFT JOIN SEEK_PROXY_ANALYSIS spa
                    ON sa.analysis_id = spa.analysis_id
                LEFT JOIN SEEK_ANALYSIS_RESULT sar
                    ON sa.ANALYSIS_RESULT_ID = sar.ANALYSIS_RESULT_ID
                LEFT JOIN SEEK_ANALYSIS_DETECTIONS sad
                    ON sar.ANALYSIS_RESULT_ID = sad.ANALYSIS_RESULT_ID
            WHERE sa.ANALYSIS_MODE_CCD LIKE 'PROXY_%'
                AND sa.analysis_status_ccd = 'COMPLETE'
                /*
                 * 해외를 외부로 임시 변경(!!s2!!)
                AND  COALESCE(spa.country_ccd, 'KR') != 'KR'
                */
                AND ANALYSIS_MODE_CCD LIKE 'PROXY_FORWARD_%'
                <if test='schDe != null and schDe != ""'>
                    AND (sa.CREATE_DT >= #{schDe}::DATE AND (#{schDe}::DATE + INTERVAL '1 DAY') > sa.CREATE_DT)
                </if>
        ) x
    </select>

    <select id="selectRealtimeAnalysisCount" resultType="analysisStatisticsVO">
        /** selectRealtimeAnalysisCount : 실시간 분석 현황을 조회한다. */
        SELECT
            TO_CHAR(DATE_TRUNC('minute', CREATE_DT), 'YYYYMMDDHH24MI') AS MINUTE_GROUP,
            COUNT(1) AS REQUEST_COUNT,
            COALESCE(SUM(CASE WHEN ANALYSIS_STATUS_CCD = 'COMPLETE' THEN 1 ELSE 0 END), 0) AS COMPLETE_COUNT
        FROM SEEK_ANALYSIS
        WHERE ANALYSIS_MODE_CCD LIKE 'PROXY_%'
            <if test='schDe != null and schDe != ""'>
                AND (CREATE_DT >= #{schDe}::DATE AND (#{schDe}::DATE + INTERVAL '1 DAY') > CREATE_DT)
            </if>
        GROUP BY MINUTE_GROUP
        ORDER BY MINUTE_GROUP
    </select>

    <select id="selectLastAnalysisCompleteDateTimeStr" resultType="string">
        /** selectLastAnalysisCompleteDateTimeStr : 최종 분석이 완료된 일시를 조회한다.(문자열) */
        SELECT
            TO_CHAR(MAX(CREATE_DT), 'YYYYMMDDHH24MI')
        FROM SEEK_ANALYSIS
        WHERE ANALYSIS_MODE_CCD LIKE 'PROXY_%'
            AND ANALYSIS_STATUS_CCD = 'COMPLETE'
            <if test='schDe != null and schDe != ""'>
                AND (CREATE_DT >= #{schDe}::DATE AND (#{schDe}::DATE + INTERVAL '1 DAY') > CREATE_DT)
            </if>
    </select>

    <select id="selectTopSensitiveInformation" resultType="analysisStatisticsVO">
        /** selectTopSensitiveInformation : 민감정보 상위 5개 항목을 조회한다. */
        SELECT x.*
        FROM (
                SELECT
                    ssit.DETECTION_TYPE_CCD,
                    SUM(COALESCE(ssi.HIT_COUNT, 0)) AS HIT_COUNT
                FROM SEEK_ANALYSIS sa
                    JOIN SEEK_ANALYSIS_RESULT sar
                        ON sa.ANALYSIS_RESULT_ID = sar.ANALYSIS_RESULT_ID
                    JOIN SEEK_SENSITIVE_INFORMATION_MAPPING ssim
                        ON sar.ANALYSIS_RESULT_ID = ssim.ANALYSIS_RESULT_ID
                    JOIN SEEK_SENSITIVE_INFORMATION ssi
                        ON ssim.SENSITIVE_INFORMATION_ID = ssi.SENSITIVE_INFORMATION_ID
                    JOIN SEEK_SENSITIVE_INFORMATION_TYPES ssit
                        ON ssi.SENSITIVE_INFORMATION_ID = ssit.SENSITIVE_INFORMATION_ID
                WHERE sa.ANALYSIS_MODE_CCD LIKE 'PROXY_%'
                    <if test='schDe != null and schDe != ""'>
                        AND (sa.CREATE_DT >= #{schDe}::DATE AND (#{schDe}::DATE + INTERVAL '1 DAY') > sa.CREATE_DT)
                    </if>
                GROUP BY ssit.DETECTION_TYPE_CCD
        ) x
        ORDER BY x.HIT_COUNT DESC
        LIMIT 5
    </select>

    <select id="selectFileAnalysisInformation" resultType="analysisStatisticsVO">
        /** selectFileAnalysisInformation : 파일 분석 정보를 조회한다. */
        SELECT
            SUM(COALESCE(sfa.FILE_COUNT, 0)) AS ANALYSIS_FILE_COUNT,
            SUM(COALESCE(sfa.TOTAL_FILE_SIZE, 0)) AS ANALYSIS_FILE_SIZE
        FROM SEEK_ANALYSIS sa
            JOIN SEEK_FILE_ANALYSIS sfa
                ON sa.ANALYSIS_ID = sfa.ANALYSIS_ID
                AND sa.ANALYSIS_MODE_CCD = 'DETECTION_FILE'
        WHERE sa.ANALYSIS_STATUS_CCD = 'COMPLETE'
            <if test='schDe != null and schDe != ""'>
                AND (sa.CREATE_DT >= #{schDe}::DATE AND (#{schDe}::DATE + INTERVAL '1 DAY') > sa.CREATE_DT)
            </if>
    </select>

    <select id="selectFileOutboundHistInformation" resultType="analysisStatisticsVO">
        /** selectFileOutboundHistInformation : 파일 외부전송 이력 정보를 조회한다. */
        SELECT
            sfoh.OUTBOUND_STATUS_CCD,
            COUNT(1) AS OUTBOUND_HIST_COUNT,
            SUM(COALESCE(sfa.FILE_COUNT, 0)) AS OUTBOUND_FILE_COUNT,
            SUM(COALESCE(sfa.TOTAL_FILE_SIZE, 0)) AS OUTBOUND_FILE_SIZE
        FROM SEEK_FILE_OUTBOUND_HIST sfoh
            LEFT JOIN SEEK_FILE_ANALYSIS sfa
                ON sfoh.ANALYSIS_ID = sfa.ANALYSIS_ID
        <where>
            <if test='schDe != null and schDe != ""'>
                AND (sfoh.CREATE_DT >= #{schDe}::DATE AND (#{schDe}::DATE + INTERVAL '1 DAY') > sfoh.CREATE_DT)
            </if>
        </where>
        GROUP BY sfoh.OUTBOUND_STATUS_CCD
    </select>

</mapper>
