<?xml version="1.0" encoding="UTF-8"?>
<!--
SEEK
Copyright (C) 2025 placelink

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program. If not, see <https://www.gnu.org/licenses/>.
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.placelink.seek.sample.service.ArticleMapper">

    <sql id="sqlArticle">
        SELECT
            a.ARTICLE_ID,
            a.ARTICLE_TYPE_CCD,
            cc1.COM_CD_NM AS ARTICLE_TYPE_CCD_NM,
            a.CONTENT,
            a.FILE_ID,
            a.CREATE_DT,
            a.MODIFY_DT
        FROM TB_ARTICLE a
            LEFT JOIN SEEK_COM_CD cc1
                ON a.ARTICLE_TYPE_CCD = cc1.COM_CD
                AND cc1.GROUP_CD = 'ARTICLE_TYPE_CCD'
        <where>
            <if test='schArticleId neq null and schArticleId neq ""'>
                AND a.ARTICLE_ID = #{schArticleId}
            </if>
            <if test='searchStartDate neq null'>
                AND a.CREATE_DT >= #{searchStartDate}
            </if>
            <if test='searchEndDate neq null'>
                AND #{searchEndDateExclusive} > a.CREATE_DT
            </if>
        </where>
    </sql>

    <select id="selectArticleList" parameterType="searchVO" resultType="articleVO">
        /** selectArticleList : 게시글 목록을 조회한다. */
        <include refid="common.sql.paging_header"/>
        <include refid="sqlArticle"/>
        <include refid="common.sql.paging_footer"/>
    </select>

    <select id="selectArticleListCount" parameterType="searchVO" resultType="integer">
        /** selectArticleListCount : 게시글 목록 개수를 조회한다. */
        SELECT COUNT(*)
        FROM (
            <include refid="sqlArticle"/>
        )
    </select>

    <select id="selectArticleListStatus" parameterType="searchVO" resultType="analysisResultVO">
        /** selectArticleListStatus : 게시글 목록 현황을 조회한다. */
        SELECT COALESCE(SUM(COALESCE(TOTAL_DETECTION_COUNT, 0)), 0) AS TOTAL_DETECTION_COUNT
        FROM (
            <include refid="sqlArticle"/>
        ) xa
            LEFT JOIN SEEK_DATABASE_ANALYSIS sda
                ON xa.ARTICLE_TYPE_CCD = 'TEXT'
                /* 함수 기반 인덱스 생성을 고려하자
                CREATE INDEX IDX_TB_ARTICLE_TARGET_ID
                ON SEEK_DATABASE_ANALYSIS (REGEXP_REPLACE(TARGET_INFORMATION, '^tb_article.content.', ''));
                */
                AND REGEXP_REPLACE(sda.TARGET_INFORMATION, '^tb_article.content.', '') = xa.ARTICLE_ID
            JOIN SEEK_ANALYSIS sa
                ON sda.ANALYSIS_ID = sa.ANALYSIS_ID
            JOIN SEEK_ANALYSIS_RESULT sar
                ON sa.ANALYSIS_RESULT_ID = sar.ANALYSIS_RESULT_ID
    </select>

    <select id="selectArticle" resultType="articleVO">
        /** selectArticle : 게시글을 조회한다. */
        <include refid="sqlArticle"/>
    </select>

    <insert id="createArticle" parameterType="articleVO">
        /** createArticle : 게시글을 등록한다. */
        INSERT INTO TB_ARTICLE (
            ARTICLE_ID,
            ARTICLE_TYPE_CCD,
            CONTENT,
            FILE_ID,
            CREATE_DT,
            MODIFY_DT
        ) VALUES (
            #{articleId},
            #{articleTypeCcd},
            #{content},
            #{fileId},
            NOW(),
            NOW()
        )
    </insert>

</mapper>
